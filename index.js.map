{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46287903-5c8c629b6ba927f49057e3500';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 12) {\n  const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(\n    query\n  )}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Failed to fetch images');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw error;\n  }\n}\n","export function renderImageCards(images) {\n  return images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n        <div class=\"photo-card\">\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p class=\"info-item\">\n              <b>Likes</b> <span>${likes}</span>\n            </p>\n            <p class=\"info-item\">\n              <b>Views</b> <span>${views}</span>\n            </p>\n            <p class=\"info-item\">\n              <b>Comments</b> <span>${comments}</span>\n            </p>\n            <p class=\"info-item\">\n              <b>Downloads</b> <span>${downloads}</span>\n            </p>\n          </div>\n        </div>`;\n      }\n    )\n    .join('');\n}\n\nexport function clearGallery(galleryEl) {\n  galleryEl.innerHTML = '';\n}\n","import { fetchImages } from './js/pixabay-api';\nimport { renderImageCards, clearGallery } from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet query = '';\nlet page = 1;\nlet galleryEl;\nlet loadMoreBtn;\nlet simpleLightbox;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchForm = document.querySelector('#search-form');\n  galleryEl = document.querySelector('.gallery');\n  loadMoreBtn = document.querySelector('.load-more');\n\n  searchForm.addEventListener('submit', onSearch);\n  loadMoreBtn.addEventListener('click', onLoadMore);\n});\n\nasync function onSearch(event) {\n  event.preventDefault();\n  query = event.currentTarget.elements.searchQuery.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Search query cannot be empty',\n    });\n    return;\n  }\n\n  clearGallery(galleryEl);\n  page = 1;\n  loadMoreBtn.classList.add('hidden');\n  fetchAndRenderImages();\n}\n\nasync function onLoadMore() {\n  page += 1;\n  fetchAndRenderImages();\n}\n\nasync function fetchAndRenderImages() {\n  try {\n    const data = await fetchImages(query, page);\n    if (data.hits.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Sorry, no images found!',\n      });\n      return;\n    }\n\n    const markup = renderImageCards(data.hits);\n    galleryEl.insertAdjacentHTML('beforeend', markup);\n\n    if (simpleLightbox) {\n      simpleLightbox.refresh();\n    } else {\n      simpleLightbox = new SimpleLightbox('.gallery a');\n    }\n\n    if (data.hits.length > 0) {\n      loadMoreBtn.classList.remove('hidden');\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later.',\n    });\n  }\n}\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","url","response","error","renderImageCards","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","galleryEl","loadMoreBtn","simpleLightbox","searchForm","onSearch","onLoadMore","event","iziToast","fetchAndRenderImages","data","markup","SimpleLightbox"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC/D,MAAMC,EAAM,GAAGL,CAAQ,QAAQD,CAAO,MAAM,mBAC1CG,CACD,CAAA,iEAAiEC,CAAI,aAAaC,CAAO,GAE1F,GAAI,CACF,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAE1C,OAAO,MAAMA,EAAS,MACvB,OAAQC,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACH,CClBO,SAASC,EAAiBC,EAAQ,CACvC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,qBAEML,CAAa;AAAA,wBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,mCAIfC,CAAK;AAAA;AAAA;AAAA,mCAGLC,CAAK;AAAA;AAAA;AAAA,sCAGFC,CAAQ;AAAA;AAAA;AAAA,uCAGPC,CAAS;AAAA;AAAA;AAAA,eAK3C,EACA,KAAK,EAAE,CACZ,CAEO,SAASC,EAAaC,EAAW,CACtCA,EAAU,UAAY,EACxB,CChCA,IAAIhB,EAAQ,GACRC,EAAO,EACPe,EACAC,EACAC,EAEJ,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAa,SAAS,cAAc,cAAc,EACxDH,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAc,SAAS,cAAc,YAAY,EAEjDE,EAAW,iBAAiB,SAAUC,CAAQ,EAC9CH,EAAY,iBAAiB,QAASI,CAAU,CAClD,CAAC,EAED,eAAeD,EAASE,EAAO,CAI7B,GAHAA,EAAM,eAAc,EACpBtB,EAAQsB,EAAM,cAAc,SAAS,YAAY,MAAM,OAEnD,CAACtB,EAAO,CACVuB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8BACf,CAAK,EACD,MACD,CAEDR,EAAaC,CAAS,EACtBf,EAAO,EACPgB,EAAY,UAAU,IAAI,QAAQ,EAClCO,GACF,CAEA,eAAeH,GAAa,CAC1BpB,GAAQ,EACRuB,GACF,CAEA,eAAeA,GAAuB,CACpC,GAAI,CACF,MAAMC,EAAO,MAAM1B,EAAYC,EAAOC,CAAI,EAC1C,GAAIwB,EAAK,KAAK,SAAW,EAAG,CAC1BF,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBACjB,CAAO,EACD,MACD,CAED,MAAMG,EAASpB,EAAiBmB,EAAK,IAAI,EACzCT,EAAU,mBAAmB,YAAaU,CAAM,EAE5CR,EACFA,EAAe,QAAO,EAEtBA,EAAiB,IAAIS,EAAe,YAAY,EAG9CF,EAAK,KAAK,OAAS,GACrBR,EAAY,UAAU,OAAO,QAAQ,CAExC,MAAe,CACdM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+CACf,CAAK,CACF,CACH"}